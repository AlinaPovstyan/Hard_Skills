{
	"info": {
		"_postman_id": "54d756ed-2c32-4c3a-a9c7-5a5074264829",
		"name": "HW_2_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp = pm.response.text();\r",
							"console.log(resp);\r",
							"\r",
							"//Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\" , function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверить, что в body приходит правильный string.\r",
							"\r",
							"//pm.test(\"Body matches string\", function () {\r",
							"//    pm.expect(resp).to.include(\"This is the first responce from server!\");\r",
							"//});\r",
							"\r",
							"pm.test(\"Body is string\", function () {\r",
							"  pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"\r",
							"var resp = pm.response.json();\r",
							"console.log(resp);\r",
							"\r",
							"var resp_name = pm.response.json().name;\r",
							"console.log(\"resp_name = \" + resp_name);\r",
							"\r",
							"var resp_age = pm.response.json().age;\r",
							"console.log(\"resp_age = \" + resp_age);\r",
							"\r",
							"var resp_salary = pm.response.json().salary;\r",
							"console.log(\"resp_salary = \" + resp_salary);\r",
							"\r",
							"//7. Спарсить request.\r",
							"\r",
							"var req = request.data;\r",
							"console.log(req);\r",
							"\r",
							"var req_name = request.data.name;\r",
							"console.log(\"req_name = \" + req_name);\r",
							"\r",
							"var req_age = request.data.age;\r",
							"console.log(\"req_age = \" + req_age);\r",
							"\r",
							"var req_salary = +request.data.salary;\r",
							"console.log(\"req_salary = \" + req_salary);\r",
							"\r",
							"//4. Проверить, что name в ответе равно name в request (name вбить руками.)\r",
							"//5.Проверить, что age в ответе равно age в request (age вбить руками.)\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"\r",
							"pm.test(\"resp_name_age_salary\", function () {\r",
							"  pm.expect(resp_name).to.eql(\"Alina\");\r",
							"  pm.expect(resp_age).to.eql(\"23\");\r",
							"  pm.expect(resp_salary).to.eql(600);\r",
							"})\r",
							"\r",
							"\r",
							"//8. Проверить, что name в ответе равно name в request (name забрать из request.)\r",
							"//9. Проверить, что age в ответе равно age в request (age забрать из request.)\r",
							"//10. Проверить, что salary в ответе равно salary в request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"req_name_age_salary\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"})\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"var resp_family = resp.family\r",
							"console.log(resp_family);\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"\r",
							"var req_u_salary_1_5_year = resp_family.u_salary_1_5_year;\r",
							"console.log (req_u_salary_1_5_year);\r",
							"\r",
							"pm.test(\"u_salary_1_5_year = salary*4\", function (){\r",
							"   pm.expect(req_u_salary_1_5_year).to.eql(resp.salary*4);\r",
							"})\r",
							"\r",
							"var respi_salary = pm.response.json().salary*4;\r",
							"console.log(respi_salary)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "23",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Alina",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "600",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"//4. Спарсить request.\r",
							"\r",
							"var resp = pm.response.json();\r",
							"console.log(resp);\r",
							"\r",
							"var req = pm.request.url.query.toObject();\r",
							"console.log(req);\r",
							"\r",
							"//5. Проверить, что name в ответе равно name в requet (name забрать из request.)\r",
							"//6. Проверить, что age в ответе равно age в request (age забрать из request.)\r",
							"//7. Проверить, что salary в ответе равно salary в request (salary забрать из request.)\r",
							"\r",
							"var req_name = pm.request.url.query.toObject().name;\r",
							"console.log(\"req_Name = \" + req_name);\r",
							"\r",
							"var req_age = pm.request.url.query.toObject().age;\r",
							"console.log(\"req_Age = \" + req_age);\r",
							"\r",
							"var req_salary = +pm.request.url.query.toObject().salary;\r",
							"console.log(\"req_Salary = \" + req_salary);\r",
							"\r",
							"pm.test(\"req_name_age_salary\", function(){\r",
							"    pm.expect(resp.name).to.eql(req_name);\r",
							"    pm.expect(resp.age).to.eql(req_age);\r",
							"    pm.expect(resp.salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"var resp_family = resp.family;\r",
							"console.log(resp.family);\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"//10.Проверить, что у параметра dog есть параметры age.\r",
							"var resp_dog = pm.response.json().family.pets.dog;\r",
							"console.log(resp_dog);\r",
							"\r",
							"pm.test(\"The_dog_has_a_parameter_name_and_age\", function(){\r",
							"    pm.expect(resp_dog).to.have.property(\"name\");\r",
							"    pm.expect(resp_dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"\r",
							"var resp_dog_name = pm.response.json().family.pets.dog.name;\r",
							"console.log(\"name_dog = \" + resp_dog_name);\r",
							"\r",
							"var resp_dog_age = pm.response.json().family.pets.dog.age;\r",
							"console.log(\"age_dog = \" + resp_dog_age);\r",
							"\r",
							"pm.test(\"dog_name_is_Luky\", function(){\r",
							"    pm.expect(resp_dog_name).to.eql(\"Luky\");\r",
							"    pm.expect(resp_dog_age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Alina&age=23&salary=600",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Alina"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "600"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"//4. Спарсить request.\r",
							"\r",
							"var resp = pm.response.json();\r",
							"//console.log(resp);\r",
							"\r",
							"var req = pm.request.url.query.toObject();\r",
							"//console.log(req);\r",
							"\r",
							"//5. Проверить, что name в ответе равно name из request (name забрать из request.)\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"\r",
							"var req_name = pm.request.url.query.toObject().name;\r",
							"//console.log(\"req_name = \" + req_name);\r",
							"\r",
							"var req_age = +pm.request.url.query.toObject().age;\r",
							"//console.log(\"req_age = \" + req_age);\r",
							"\r",
							"pm.test(\"req_name_age\", function(){\r",
							"    pm.expect(resp.name).to.eql(req_name);\r",
							"    pm.expect(resp.age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"\r",
							"var req_salary = +req.salary;\r",
							"console.log(\"req_Salary = \" + req_salary);\r",
							"\r",
							"var resp_salary = resp.salary;\r",
							"console.log(\"resp_Salary = \" + resp.salary);\r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"\r",
							"console.log(resp_salary[0]);\r",
							"console.log(resp_salary[1]);\r",
							"console.log(resp_salary[2]);\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"[0]=req_salary/[1]=req_salary*2/[2]=req_salary*3\", function(){\r",
							"    pm.expect(resp_salary[0]).to.eql(req_salary);\r",
							"    pm.expect(+resp_salary[1]).to.eql(req_salary*2);\r",
							"    pm.expect(+resp_salary[2]).to.eql(req_salary*3);\r",
							"});\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"//16. Создать в окружении переменную age\r",
							"//17. Создать в окружении переменную salary\r",
							"//18. Передать в окружение переменную name\r",
							"//19. Передать в окружение переменную age\r",
							"//20. Передать в окружение переменную salary\r",
							"var name = pm.response.json().name;\r",
							"//console.log(name);\r",
							"var age = pm.response.json().age;\r",
							"//console.log(age);\r",
							"var salary = pm.response.json().salary[0];\r",
							"//console.log(salary);\r",
							"\r",
							"pm.environment.set(\"name\", name);\r",
							"pm.environment.set(\"age\", age);\r",
							"pm.environment.set(\"salary\", salary);\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"//1.Вариант\r",
							"//for (var i = 0, length = resp_salary.length; i < length; i++) {\r",
							"//    console.log(resp_salary[i]);\r",
							"//}\r",
							"\r",
							"//2.Вариант\r",
							"for(var salary in resp.salary){\r",
							"   console.log(salary,resp.salary[salary]);\r",
							"};\r",
							"\r",
							"//3.Вариант\r",
							"//for(var prop in resp.salary) {\r",
							"//    console.log(prop + \" = \" + resp.salary[prop]);\r",
							"//}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Alina&age=23&salary=600",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alina"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "600"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//5. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//6. Спарсить response body в json.\r",
							"//7. Спарсить request.\r",
							"\r",
							"var resp = pm.response.json();\r",
							"//console.log(resp);\r",
							"var req = request.data;\r",
							"//console.log(req);\r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"\r",
							"pm.test(\"Salary\", function(){\r",
							"    pm.expect(resp).to.have.property(\"start_qa_salary\");\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_6_months\");\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_12_months\");\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"    pm.expect(resp).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"\r",
							"var req_salary = +request.data.salary;\r",
							"//console.log(req_salary);\r",
							"\r",
							"pm.test(\"Salary = \", function(){\r",
							"    pm.expect(resp.start_qa_salary).to.eql(req_salary);\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(req.salary*2);\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(req.salary*2.7);\r",
							"    pm.expect(resp[\"qa_salary_after_1.5_year\"]).to.eql(req.salary*3.3);\r",
							"    pm.expect(resp[\"qa_salary_after_3.5_years\"]).to.eql(req.salary*3.8);\r",
							"});\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"[1]=salary\", function(){\r",
							"   pm.expect(resp.person.u_name[1]).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"\r",
							"pm.test(\"u_age = age\", function(){\r",
							"    pm.expect(resp.person.u_age).to.eql(+req.age);\r",
							"});\r",
							" \r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"u_salary_5_years = salary*4.2\", function(){\r",
							"    pm.expect(resp.person.u_salary_5_years).to.eql(req_salary*4.2);\r",
							"});\r",
							"\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"//1.Вариант\r",
							"for(var person in resp.person){\r",
							"   console.log(person, resp.person[person]);\r",
							"};\r",
							"\r",
							"//2.Вариант\r",
							"//for (var prop in resp.person) {\r",
							"//    console.log(prop + \" = \" + resp.person[prop]);\r",
							"//};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "default"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}